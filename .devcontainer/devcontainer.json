{
  "name": "Weblate Plugin Development",
  // Use the docker-compose.yml file to define the services
  "dockerComposeFile": "docker-compose.yml",
  // The service VS Code should connect to within the compose setup
  "service": "weblate",
  // The folder inside the container where your project files will be mounted
  "workspaceFolder": "/workspace",
  // Use 'forwardPorts' to make ports available locally.
  "forwardPorts": [
    8080 // Weblate web UI
    // Add other ports if needed, e.g., for debugging
  ],
  // Set *default* container specific settings.json values on container create.
  "settings": {
    "python.defaultInterpreterPath": "/app/venv/bin/python",
    "python.linting.enabled": true,
    "python.linting.pylintEnabled": true, // Or flake8, etc.
    "python.formatting.provider": "black", // Or autopep8
    "python.testing.unittestEnabled": false,
    "python.testing.pytestEnabled": true // Assuming pytest is used in Weblate
  },
  // // Add the IDs of extensions you want installed when the container is created.
  // "extensions": [
  //   "ms-python.python", // Essential Python support
  //   "ms-python.debugpy", // Python debugger
  //   "ms-azuretools.vscode-docker" // Docker integration
  //   // Add any other extensions relevant for your workflow
  // ],
  // Use 'postCreateCommand' to run commands after the container is created.
  // Example: Install plugin-specific dependencies if needed
  // "postCreateCommand": "pip install -r requirements-dev.txt",

  // Comment out connectAsRoot=true if you don't need access to root-level commands.
  // "remoteUser": "weblate" // Run as the non-root 'weblate' user defined in the base image if possible
  // Note: The base image might run processes as root initially. Check container behavior.
  // If you need to install things, you might need root temporarily or adjust permissions.

  // Features to add to the dev container (optional)
  // "features": {
  //   "ghcr.io/devcontainers/features/git:1": {}
  // }
}
